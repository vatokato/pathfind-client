{"version":3,"sources":["reducers/pathReducer.js","reducers/index.js","components/Place.js","components/Form.js","actions/FormActions.js","containers/FormContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","distance","places","name","x","y","z","rootReducer","combineReducers","path","state","action","type","payload","splice","Place","handlerPlaceDelClick","e","props","delPlace","ind","handlerPlaceClearClick","place","forceUpdate","handlerPlaceRandClick","parseInt","Math","random","handlerTextChange","target","dataset","value","console","log","this","className","data-name","placeholder","onChange","onClick","title","React","Component","Form","onSubmit","preventDefault","form","inp","querySelector","disabled","querySelectorAll","forEach","i","push","getDistance","handleAddPlaceClick","addPlace","map","key","cb","dispatch","total","text","Promise","all","url","fetchs","length","fetch","method","headers","body","JSON","stringify","name1","x1","y1","z1","name2","x2","y2","z2","then","response","json","fetchPromises","tmpDistance","way","floor","catch","err","FormContainer","Fragment","connect","store","App","Boolean","window","location","hostname","match","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"w0BAAA,IAAMA,EAAe,CACnBC,SAAU,GACVC,OAAO,CACL,CAACC,KAAK,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,IACrB,CAACH,KAAK,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,MCDZC,EAAYC,YAAgB,CACvCC,KDGyB,WAAiC,IAAhCC,EAA+B,uDAAzBV,EAAcW,EAAW,uCACzD,OAAQA,EAAOC,MACb,IAAK,uBACH,OAAO,EAAP,GAAYF,EAAZ,CAAmBT,SAAUU,EAAOE,UACtC,IAAK,YACH,OAAO,EAAP,GAAYH,EAAZ,CAAmBR,OAAO,GAAD,mBAAMQ,EAAMR,QAAZ,CAAoBS,EAAOE,YACtD,IAAK,YAEH,OADAH,EAAMR,OAAOY,OAAOH,EAAOE,QAAQ,GAC5B,EAAP,GAAYH,EAAZ,CAAmBR,OAAQQ,EAAMR,SACnC,QACE,OAAOQ,M,yDEfAK,EAAb,2MACEC,qBAAuB,SAACC,GACtB,EAAKC,MAAMC,SAAS,EAAKD,MAAME,MAFnC,EAIEC,uBAAyB,SAACJ,GACxB,EAAKC,MAAMI,MAAMnB,KAAK,GACtB,EAAKe,MAAMI,MAAMlB,EAAE,GACnB,EAAKc,MAAMI,MAAMjB,EAAE,GACnB,EAAKa,MAAMI,MAAMhB,EAAE,GACnB,EAAKiB,eATT,EAWEC,sBAAwB,SAACP,GACvB,EAAKC,MAAMI,MAAMlB,EAAEqB,SAAuB,IAAdC,KAAKC,UACjC,EAAKT,MAAMI,MAAMjB,EAAEoB,SAAuB,IAAdC,KAAKC,UACjC,EAAKT,MAAMI,MAAMhB,EAAEmB,SAAuB,GAAdC,KAAKC,UACjC,EAAKJ,eAfT,EAkBEK,kBAAoB,SAACX,GACnB,EAAKC,MAAMI,MAAML,EAAEY,OAAOC,QAAQ3B,MAAQc,EAAEY,OAAOE,MACnD,EAAKR,eApBT,wEAwBIS,QAAQC,IAAI,gBADL,MAEeC,KAAKhB,MAAMI,MAA1BnB,EAFA,EAEAA,KAAMC,EAFN,EAEMA,EAAEC,EAFR,EAEQA,EAAEC,EAFV,EAEUA,EACXc,EAAMc,KAAKhB,MAAME,IACvB,OACE,yBAAKe,UAAU,eACb,yBAAKA,UAAU,wBACb,2BAAOvB,KAAK,OAAOT,KAAM,OAAOiB,EAAKgB,YAAU,OAAOC,YAAY,2EAAeN,MAAO5B,EAAMmC,SAAUJ,KAAKN,qBAE/G,yBAAKO,UAAU,4BACb,2BAAOvB,KAAK,OAAOT,KAAM,IAAIiB,EAAKgB,YAAU,IAAIC,YAAY,IAAIN,MAAO3B,EAAGkC,SAAUJ,KAAKN,qBAE3F,yBAAKO,UAAU,4BACb,2BAAOvB,KAAK,OAAOT,KAAM,IAAIiB,EAAKgB,YAAU,IAAIC,YAAY,IAAIN,MAAO1B,EAAGiC,SAAUJ,KAAKN,qBAE3F,yBAAKO,UAAU,4BACb,2BAAOvB,KAAK,OAAOT,KAAM,IAAIiB,EAAKgB,YAAU,IAAIC,YAAY,IAAIN,MAAOzB,EAAGgC,SAAUJ,KAAKN,qBAE3F,yBAAKO,UAAU,wBAAwBI,QAASL,KAAKV,sBAAuBgB,MAAM,UAAS,oCAC3F,yBAAKL,UAAU,yBAAyBI,QAASL,KAAKb,uBAAwBmB,MAAM,SAAQ,oCAC5F,yBAAKL,UAAU,uBAAuBI,QAASL,KAAKlB,qBAAuBwB,MAAM,UAAS,yCA3ClG,GAA2BC,IAAMC,WCCpBC,EAAb,2MACEC,SAAW,SAAC3B,GACVA,EAAE4B,iBACF,IAAIC,EAAO7B,EAAEY,OACT3B,EAAS,GACT6C,EAAM9B,EAAEY,OAAOmB,cAAc,sBACjCD,EAAIE,UAAW,EAEfH,EAAKI,iBAAiB,UAAUC,QAAQ,SAAC7B,EAAM8B,GAC7ClD,EAAOmD,KAAK,CACVlD,KAAK2C,EAAK,OAAOM,GAAGrB,MACpB3B,EAAE0C,EAAK,IAAIM,GAAGrB,MACd1B,EAAEyC,EAAK,IAAIM,GAAGrB,MACdzB,EAAEwC,EAAK,IAAIM,GAAGrB,UAIlB,EAAKb,MAAMoC,YAAYpD,EAAQ,WAC7B6C,EAAIE,UAAW,KAlBrB,EAsBEM,oBAAsB,SAACtC,GACrBA,EAAE4B,iBACF,EAAK3B,MAAMsC,SAAS,CAACrD,KAAK,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,MAxB7C,wEA2BY,IAAD,OACP0B,QAAQC,IAAI,cAAeC,KAAKhB,OAChC,IAAMhB,EAASgC,KAAKhB,MAAMhB,QAAU,GACpC,OACE,0BAAM0C,SAAUV,KAAKU,UAEjB1C,EAAOuD,IAAI,SAACnC,EAAO8B,GAAR,OACT,6BAASjB,UAAU,QAAQuB,IAAKN,GAC9B,kBAAC,EAAD,CAAOhC,IAAKgC,EAAG9B,MAAOA,EAAOH,SAAU,EAAKD,MAAMC,cAIxD,4BAAQoB,QAASL,KAAKqB,qBAAtB,oCACA,2BAAO3C,KAAK,SAASmB,MAAM,sJAxCnC,GAA0BU,IAAMC,WCHnBY,EAAc,SAACpD,EAAQyD,GAClC,OAAO,SAACC,GACNA,EAAS,CACPhD,KAAM,yBAGR,IACIiD,EAAQ,EACRC,EAAO,GACXC,QACGC,IA0DP,SAAwB9D,EAAQ+D,GAE9B,IADA,IAAIC,EAAS,GACLd,EAAI,EAAGA,EAAElD,EAAOiE,OAAO,EAAGf,IAChCc,EAAOb,KACLe,MAAMH,EAAK,CACTI,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOxE,EAAOkD,GAAGjD,KACjBwE,GAAIzE,EAAOkD,GAAGhD,EACdwE,GAAI1E,EAAOkD,GAAG/C,EACdwE,GAAI3E,EAAOkD,GAAG9C,EACdwE,MAAO5E,EAAOkD,EAAE,GAAGjD,KACnB4E,GAAI7E,EAAOkD,EAAE,GAAGhD,EAChB4E,GAAI9E,EAAOkD,EAAE,GAAG/C,EAChB4E,GAAI/E,EAAOkD,EAAE,GAAG9C,MAEjB4E,KAAK,SAAAC,GAAQ,OAAEA,EAASC,UAG/B,OAAOlB,EAhFGmB,CAAcnF,EAJZ,kCAKPgF,KAAK,SAACC,GACL,IAAIG,EAAY,EAehB,OAdAH,EAAShC,QAAQ,SAACoC,EAAInC,GACpBkC,GAAeC,EAAItF,SACnB,IAAIyE,EAAQa,EAAIb,QAAc,IAAJtB,EAAQ,uCAAW,IACzC0B,EAAQS,EAAIT,QAAU1B,IAAI+B,EAAShB,OAAO,EAAI,iCAAU,IAEzDO,IACDZ,GAAM,gBAAMY,GAEXI,IACDhB,GAAM,iBAAOgB,EAAM,IAAKpD,KAAK8D,MAAoB,IAAdF,GAAqB,IAAK,YAC7DA,EAAY,GAEdzB,GAAO0B,EAAItF,WAENkF,IAERD,KAAK,SAACC,GACLxB,IACAC,EAAS,CACPhD,KAAM,uBACNC,QAAS,CACPiD,KAAMA,EACND,MAAOnC,KAAK8D,MAAc,IAAR3B,GAAe,SAItC4B,MAAM,SAACC,GACN9B,EAAS,CACPhD,KAAM,qBACNC,QAAS6E,Q,ICpCbC,E,iLAEF3D,QAAQC,IAAI,uBAAwBC,KAAKhB,OADjC,MAEqBgB,KAAKhB,MAAMT,KAAhCR,EAFA,EAEAA,SAAUC,EAFV,EAEUA,OAClB,OACE,kBAAC,IAAM0F,SAAP,KACE,yBAAKzD,UAAU,kBACb,kBAAC,EAAD,CACEmB,YAAapB,KAAKhB,MAAMoC,YACxBE,SAAUtB,KAAKhB,MAAMsC,SACrBrC,SAAUe,KAAKhB,MAAMC,SACrBjB,OAAQA,KAEXD,EAAS4D,MAAM,GACd,yBAAK1B,UAAU,UACb,yBAAKA,UAAU,kBAAf,mHAAuDlC,EAAS4D,MAAhE,YACA,yBAAK1B,UAAU,iBAAiBlC,EAAS6D,Y,GAhBzBrB,IAAMC,WAwCnBmD,cAfS,SAAAC,GACtB,MAAO,CACLrF,KAAMqF,EAAMrF,OAKW,SAAAmD,GACzB,MAAO,CACLJ,SAAU,SAAClC,GAAD,OAAWsC,EDQD,SAACtC,GACvB,MAAO,CACLV,KAAM,YACNC,QAASS,GCXqBkC,CAASlC,KACvCH,SAAU,SAACC,GAAD,OAASwC,EDcC,SAACxC,GACvB,MAAO,CACLR,KAAM,YACNC,QAASO,GCjBmBD,CAASC,KACrCkC,YAAa,SAACpD,EAAQyD,GAAT,OAAgBC,EAASN,EAAYpD,EAAQyD,OAI/CkC,CAA4CF,GC7B5CI,MAbf,WACE,OACE,yBAAK5D,UAAU,OACb,uLACA,yBAAKA,UAAU,eACb,wOAEF,6BACE,kBAAC,EAAD,SCAY6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNN,IAAMN,EAAQO,YAAY9F,EAAa+F,YAAgBC,MAEvDC,IAASC,OACP,kBAAC,IAAD,CAAUX,MAAOA,GACf,kBAAC,EAAD,OAEFY,SAASC,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,KAAK,SAAA6B,GACjCA,EAAaC,iB","file":"static/js/main.bc213ddb.chunk.js","sourcesContent":["const initialState = {\r\n  distance: '',\r\n  places:[\r\n    {name:'',x:'',y:'',z:''},\r\n    {name:'',x:'',y:'',z:''}\r\n  ]\r\n}\r\nexport const pathReducer = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_DISTANCE_SUCCESS':\r\n      return { ...state, distance: action.payload };\r\n    case 'ADD_PLACE':\r\n      return { ...state, places: [...state.places, action.payload] };\r\n    case 'DEL_PLACE':\r\n      state.places.splice(action.payload,1);\r\n      return { ...state, places: state.places };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { pathReducer } from './pathReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const rootReducer=combineReducers({\r\n  path: pathReducer\r\n})","import React from 'react';\r\n\r\nexport class Place extends React.Component {\r\n  handlerPlaceDelClick = (e) => {\r\n    this.props.delPlace(this.props.ind);\r\n  }\r\n  handlerPlaceClearClick = (e) => {\r\n    this.props.place.name='';\r\n    this.props.place.x='';\r\n    this.props.place.y='';\r\n    this.props.place.z='';\r\n    this.forceUpdate();\r\n  }\r\n  handlerPlaceRandClick = (e) => {\r\n    this.props.place.x=parseInt(Math.random()*1000);\r\n    this.props.place.y=parseInt(Math.random()*1000);\r\n    this.props.place.z=parseInt(Math.random()*10);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handlerTextChange = (e) => {\r\n    this.props.place[e.target.dataset.name] = e.target.value;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Place render\");\r\n    const {name, x,y,z} = this.props.place;\r\n    const ind = this.props.ind;\r\n    return (\r\n      <div className=\"input-group\">\r\n        <div className=\"input-text-container\">\r\n          <input type=\"text\" name={'name'+ind} data-name=\"name\" placeholder=\"Наименование\" value={name} onChange={this.handlerTextChange} />\r\n        </div>\r\n        <div className=\"input-text-container -sm\">\r\n          <input type=\"text\" name={'x'+ind} data-name=\"x\" placeholder=\"x\" value={x} onChange={this.handlerTextChange}/>\r\n        </div>\r\n        <div className=\"input-text-container -sm\">\r\n          <input type=\"text\" name={'y'+ind} data-name=\"y\" placeholder=\"y\" value={y} onChange={this.handlerTextChange}/>\r\n        </div>\r\n        <div className=\"input-text-container -sm\">\r\n          <input type=\"text\" name={'z'+ind} data-name=\"z\" placeholder=\"z\" value={z} onChange={this.handlerTextChange}/>\r\n        </div>\r\n        <div className=\"action-rand-container\" onClick={this.handlerPlaceRandClick} title=\"random\"><span>r</span></div>\r\n        <div className=\"action-clear-container\" onClick={this.handlerPlaceClearClick} title=\"clear\"><span>c</span></div>\r\n        <div className=\"action-del-container\" onClick={this.handlerPlaceDelClick}  title=\"delete\"><span>x</span></div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Place } from './Place'\r\n\r\nexport class Form extends React.Component {\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let form = e.target;\r\n    let places = [];\r\n    let inp = e.target.querySelector('input[type=submit]');\r\n    inp.disabled = true;\r\n\r\n    form.querySelectorAll(\".place\").forEach((place,i)=>{\r\n      places.push({\r\n        name:form['name'+i].value,\r\n        x:form['x'+i].value,\r\n        y:form['y'+i].value,\r\n        z:form['z'+i].value,\r\n      })\r\n    });\r\n\r\n    this.props.getDistance(places, ()=>{\r\n      inp.disabled = false;\r\n    });\r\n  }\r\n\r\n  handleAddPlaceClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.addPlace({name:'',x:'',y:'',z:''});\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Form render\", this.props);\r\n    const places = this.props.places || [];\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        {\r\n          places.map((place, i)=>\r\n            <section className=\"place\" key={i} >\r\n              <Place ind={i} place={place} delPlace={this.props.delPlace} />\r\n            </section>\r\n          )\r\n        }\r\n        <button onClick={this.handleAddPlaceClick}>+ место</button>\r\n        <input type=\"submit\" value=\"Рассчитать длину маршрута\" />\r\n      </form>\r\n    )\r\n  }\r\n}","export const getDistance = (places, cb) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'GET_DISTANCE_REQUEST'\r\n    })\r\n\r\n    let url = \"http://134.0.119.35:3001/path\";\r\n    let total = 0;\r\n    let text = '';\r\n    Promise\r\n      .all( fetchPromises(places, url) )\r\n      .then((response) => {\r\n        let tmpDistance=0;\r\n        response.forEach((way,i )=> {\r\n          tmpDistance += way.distance;\r\n          let name1 = way.name1 || (i===0 ? 'начала' : '');\r\n          let name2 = way.name2 || (i===response.length-1 ? 'конца' : '');\r\n\r\n          if(name1) {\r\n            text+=\"от \"+name1;\r\n          }\r\n          if(name2) {\r\n            text+=\" до \"+name2+\" \"+(Math.floor(tmpDistance * 100) / 100)+\" м; \";\r\n            tmpDistance=0;\r\n          }\r\n          total+=way.distance;\r\n        });\r\n        return response;\r\n      })\r\n      .then((response) => {\r\n        cb();\r\n        dispatch({\r\n          type: 'GET_DISTANCE_SUCCESS',\r\n          payload: {\r\n            text: text,\r\n            total: Math.floor(total * 100) / 100\r\n          },\r\n        });\r\n      })\r\n      .catch((err)=>{\r\n        dispatch({\r\n          type: 'GET_DISTANCE_ERROR',\r\n          payload: err,\r\n        });\r\n      });\r\n  }\r\n};\r\n\r\nexport const addPlace = (place) => {\r\n  return {\r\n    type: 'ADD_PLACE',\r\n    payload: place\r\n  }\r\n}\r\n\r\nexport const delPlace = (ind) => {\r\n  return {\r\n    type: 'DEL_PLACE',\r\n    payload: ind\r\n  }\r\n}\r\nexport const changePlace = () => {\r\n  return {\r\n    type: 'CHANGE_PLACE',\r\n    payload: ''\r\n  }\r\n}\r\n\r\nfunction fetchPromises (places, url) {\r\n  let fetchs = [];\r\n  for(let i = 0; i<places.length-1; i++) {\r\n    fetchs.push(\r\n      fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n          name1: places[i].name,\r\n          x1: places[i].x,\r\n          y1: places[i].y,\r\n          z1: places[i].z,\r\n          name2: places[i+1].name,\r\n          x2: places[i+1].x,\r\n          y2: places[i+1].y,\r\n          z2: places[i+1].z,\r\n        })\r\n      }).then(response=>response.json())\r\n    )\r\n  }\r\n  return fetchs;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Form } from '../components/Form'\r\nimport { getDistance, addPlace, delPlace } from '../actions/FormActions'\r\n\r\n\r\nclass FormContainer extends React.Component {\r\n  render () {\r\n    console.log(\"FormContainer render\", this.props);\r\n    const { distance, places } = this.props.path;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"form-container\">\r\n          <Form\r\n            getDistance={this.props.getDistance}\r\n            addPlace={this.props.addPlace}\r\n            delPlace={this.props.delPlace}\r\n            places={places} />\r\n        </div>\r\n        {distance.total>0 && (\r\n          <div className=\"result\">\r\n            <div className=\"distance-total\">Общая длина маршрута: {distance.total} м.</div>\r\n            <div className=\"distance-text\">{distance.text}</div>\r\n          </div>\r\n        )}\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    path: store.path\r\n  };\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPlace: (place) => dispatch(addPlace(place)),\r\n    delPlace: (ind) => dispatch(delPlace(ind)),\r\n    getDistance: (places, cb) => dispatch(getDistance(places, cb)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FormContainer);","import React from 'react';\nimport './App.scss';\nimport FormContainer from './containers/FormContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Продолжительность маршрута</h1>\n      <div className=\"description\">\n        <p>1 деление координат приравнено к 1 метру</p>\n      </div>\n      <div>\n        <FormContainer />\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore } from 'redux'\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}